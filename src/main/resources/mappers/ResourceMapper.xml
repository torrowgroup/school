<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.futher.school.dao.ResourceMapper">
  <resultMap id="BaseResultMap" type="com.futher.school.entity.Resource">
    <id column="re_id" jdbcType="INTEGER" property="reId" />
    <result column="re_typeId" jdbcType="INTEGER" property="reTypeid" />
    <result column="re_typeName" jdbcType="VARCHAR" property="reTypename" />
    <result column="re_title" jdbcType="VARCHAR" property="reTitle" />
    <result column="re_publisher" jdbcType="VARCHAR" property="rePublisher" />
    <result column="re_releaseDate" jdbcType="TIMESTAMP" property="reReleasedate" />
    <result column="re_spare" jdbcType="VARCHAR" property="reSpare" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.futher.school.entity.Resource">
    <result column="re_content" jdbcType="LONGVARCHAR" property="reContent" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    re_id, re_typeId, re_typeName, re_title, re_publisher, re_releaseDate, re_spare
  </sql>
  <sql id="Blob_Column_List">
    re_content
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.futher.school.entity.ResourceExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.futher.school.entity.ResourceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tb_resource
    where re_id = #{reId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_resource
    where re_id = #{reId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.futher.school.entity.ResourceExample">
    delete from tb_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.futher.school.entity.Resource">
    insert into tb_resource (re_id, re_typeId, re_typeName, 
      re_title, re_publisher, re_releaseDate, 
      re_spare, re_content)
    values (#{reId,jdbcType=INTEGER}, #{reTypeid,jdbcType=INTEGER}, #{reTypename,jdbcType=VARCHAR}, 
      #{reTitle,jdbcType=VARCHAR}, #{rePublisher,jdbcType=VARCHAR}, #{reReleasedate,jdbcType=TIMESTAMP}, 
      #{reSpare,jdbcType=VARCHAR}, #{reContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.futher.school.entity.Resource">
    insert into tb_resource
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="reId != null">
        re_id,
      </if>
      <if test="reTypeid != null">
        re_typeId,
      </if>
      <if test="reTypename != null">
        re_typeName,
      </if>
      <if test="reTitle != null">
        re_title,
      </if>
      <if test="rePublisher != null">
        re_publisher,
      </if>
      <if test="reReleasedate != null">
        re_releaseDate,
      </if>
      <if test="reSpare != null">
        re_spare,
      </if>
      <if test="reContent != null">
        re_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="reId != null">
        #{reId,jdbcType=INTEGER},
      </if>
      <if test="reTypeid != null">
        #{reTypeid,jdbcType=INTEGER},
      </if>
      <if test="reTypename != null">
        #{reTypename,jdbcType=VARCHAR},
      </if>
      <if test="reTitle != null">
        #{reTitle,jdbcType=VARCHAR},
      </if>
      <if test="rePublisher != null">
        #{rePublisher,jdbcType=VARCHAR},
      </if>
      <if test="reReleasedate != null">
        #{reReleasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="reSpare != null">
        #{reSpare,jdbcType=VARCHAR},
      </if>
      <if test="reContent != null">
        #{reContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.futher.school.entity.ResourceExample" resultType="java.lang.Long">
    select count(*) from tb_resource
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update tb_resource
    <set>
      <if test="record.reId != null">
        re_id = #{record.reId,jdbcType=INTEGER},
      </if>
      <if test="record.reTypeid != null">
        re_typeId = #{record.reTypeid,jdbcType=INTEGER},
      </if>
      <if test="record.reTypename != null">
        re_typeName = #{record.reTypename,jdbcType=VARCHAR},
      </if>
      <if test="record.reTitle != null">
        re_title = #{record.reTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.rePublisher != null">
        re_publisher = #{record.rePublisher,jdbcType=VARCHAR},
      </if>
      <if test="record.reReleasedate != null">
        re_releaseDate = #{record.reReleasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reSpare != null">
        re_spare = #{record.reSpare,jdbcType=VARCHAR},
      </if>
      <if test="record.reContent != null">
        re_content = #{record.reContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update tb_resource
    set re_id = #{record.reId,jdbcType=INTEGER},
      re_typeId = #{record.reTypeid,jdbcType=INTEGER},
      re_typeName = #{record.reTypename,jdbcType=VARCHAR},
      re_title = #{record.reTitle,jdbcType=VARCHAR},
      re_publisher = #{record.rePublisher,jdbcType=VARCHAR},
      re_releaseDate = #{record.reReleasedate,jdbcType=TIMESTAMP},
      re_spare = #{record.reSpare,jdbcType=VARCHAR},
      re_content = #{record.reContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update tb_resource
    set re_id = #{record.reId,jdbcType=INTEGER},
      re_typeId = #{record.reTypeid,jdbcType=INTEGER},
      re_typeName = #{record.reTypename,jdbcType=VARCHAR},
      re_title = #{record.reTitle,jdbcType=VARCHAR},
      re_publisher = #{record.rePublisher,jdbcType=VARCHAR},
      re_releaseDate = #{record.reReleasedate,jdbcType=TIMESTAMP},
      re_spare = #{record.reSpare,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.futher.school.entity.Resource">
    update tb_resource
    <set>
      <if test="reTypeid != null">
        re_typeId = #{reTypeid,jdbcType=INTEGER},
      </if>
      <if test="reTypename != null">
        re_typeName = #{reTypename,jdbcType=VARCHAR},
      </if>
      <if test="reTitle != null">
        re_title = #{reTitle,jdbcType=VARCHAR},
      </if>
      <if test="rePublisher != null">
        re_publisher = #{rePublisher,jdbcType=VARCHAR},
      </if>
      <if test="reReleasedate != null">
        re_releaseDate = #{reReleasedate,jdbcType=TIMESTAMP},
      </if>
      <if test="reSpare != null">
        re_spare = #{reSpare,jdbcType=VARCHAR},
      </if>
      <if test="reContent != null">
        re_content = #{reContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where re_id = #{reId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.futher.school.entity.Resource">
    update tb_resource
    set re_typeId = #{reTypeid,jdbcType=INTEGER},
      re_typeName = #{reTypename,jdbcType=VARCHAR},
      re_title = #{reTitle,jdbcType=VARCHAR},
      re_publisher = #{rePublisher,jdbcType=VARCHAR},
      re_releaseDate = #{reReleasedate,jdbcType=TIMESTAMP},
      re_spare = #{reSpare,jdbcType=VARCHAR},
      re_content = #{reContent,jdbcType=LONGVARCHAR}
    where re_id = #{reId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.futher.school.entity.Resource">
    update tb_resource
    set re_typeId = #{reTypeid,jdbcType=INTEGER},
      re_typeName = #{reTypename,jdbcType=VARCHAR},
      re_title = #{reTitle,jdbcType=VARCHAR},
      re_publisher = #{rePublisher,jdbcType=VARCHAR},
      re_releaseDate = #{reReleasedate,jdbcType=TIMESTAMP},
      re_spare = #{reSpare,jdbcType=VARCHAR}
    where re_id = #{reId,jdbcType=INTEGER}
  </update>
  <!--获得所有上传文件名-->
  <select id="getUploadFileName" parameterType="com.futher.school.entity.Resource" resultMap="ResultMapWithBLOBs" >  
   select * from tb_resource 
  </select>
  
</mapper>