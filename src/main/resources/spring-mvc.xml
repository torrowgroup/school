<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.0.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd">
 <!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->  
     <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="com.futher.school.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>
     
	<mvc:annotation-driven content-negotiation-manager="contentNegotiationManager">
	        <mvc:message-converters register-defaults="true">
	            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
	            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
	                <constructor-arg value="UTF-8"/>
	            </bean>
	        </mvc:message-converters>
	    </mvc:annotation-driven>
	    
	    <!-- 配置json数据 -->  
<!--     <bean     -->
<!--         class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">     -->
<!--         <property name="messageConverters">     -->
<!--             <list>     -->
<!--                 <ref bean="mappingJackson2HttpMessageConverter" />     -->
<!--             </list>     -->
<!--         </property>     -->
<!--     </bean>     -->
<!--     <bean id="mappingJackson2HttpMessageConverter"     -->
<!--         class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">     -->
<!--         <property name="supportedMediaTypes">     -->
<!--             <list>     -->
<!--                 <value>text/html;charset=UTF-8</value>     -->
<!--                 <value>text/json;charset=UTF-8</value>     -->
<!--                 <value>application/json;charset=UTF-8</value>     -->
<!--             </list>     -->
<!--         </property>     -->
<!--     </bean>   -->
	    
<!-- 	    	启动SpringMVC的注解功能，完成请求和注解POJO的映射 -->
<!-- 	<bean -->
<!-- 		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> -->
<!-- 		<property name="messageConverters"> -->
<!-- 			<list> -->
<!-- 				<ref bean="mappingJacksonHttpMessageConverter" /> JSON转换器 -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	<!--避免IE执行AJAX时，返回JSON出现下载文件 --> 
<!-- 	<bean id="mappingJacksonHttpMessageConverter" -->
<!-- 		class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter"> -->
<!-- 		<property name="supportedMediaTypes"> -->
<!-- 			<list> -->
<!-- 				<value>text/html;charset=UTF-8</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
	     <!-- REST中根据URL后缀自动判定Content-Type及相应的View -->
    <bean id="contentNegotiationManager" class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        <property name="mediaTypes">
            <value>
                json=application/json
                xml=application/xml
            </value>
        </property>
    </bean>
	    <!--静态资源-->
    <!-- 对静态资源文件的访问 支持访问WEB-INF目录 -->
    <mvc:resources mapping="/static/**" location="/static/" />
    
           <!-- 使用thymeleaf解析 -->
    <bean id="templateResolver" class="org.thymeleaf.spring4.templateresolver.SpringResourceTemplateResolver">
        <property name="prefix" value="/WEB-INF/"/>
        <property name="suffix" value=".html"/>
        <property name="templateMode" value="HTML"/>
        <property name="cacheable" value="false"/>
        <property name="characterEncoding" value="UTF-8"/>
    </bean>

    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver"/>
    </bean>

    <bean id="viewResolver" class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine"/>
        <property name="characterEncoding" value="UTF-8"/> 
    </bean>
      
<!--       默认的视图解析器 在上边的解析错误时使用 (默认使用html)- -->
<!--     <bean id="defaultViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver"> -->
<!--         <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/> -->
<!--         <property name="contentType" value="text/html"/> -->
<!--         <property name="prefix" value="/WEB-INF/"/> -->
<!--         <property name="suffix" value=".jsp"/> -->
<!--     </bean> -->
      
    <!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->  
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">    
        <!-- 默认编码 -->  
        <property name="defaultEncoding" value="utf-8" />    
        <!-- 文件大小最大值 -->  
        <property name="maxUploadSize" value="10485760000" />    
        <!-- 内存中的最大值 -->  
        <property name="maxInMemorySize" value="40960" />    
    </bean>
	<!-- 控制器异常处理 -->
    <bean id="exceptionHandlerExceptionResolver" class="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver">
    </bean>
</beans>